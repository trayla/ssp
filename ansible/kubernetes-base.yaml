- hosts: console
  become: yes
  vars_files:
    - /opt/mgmt/values-ssp.yaml
  tasks:

    # Install the Canel SDN

    - name: Install pod network
      become: yes
      shell: "kubectl apply -f https://docs.projectcalico.org/v{{ platform.assets.calico.version }}/manifests/calico.yaml"
      args:
        chdir: $HOME
        creates: pod_network_setup.txt

    # Install the Calico command line interface (calicoctl)

    - name: Install the Calico command line interface
      shell: "kubectl apply -f https://docs.projectcalico.org/v{{ platform.assets.calico.version }}/manifests/calicoctl.yaml"

    - name: Define a shell alias for calicoctl for sysadm
      lineinfile:
        path=/home/sysadm/.bashrc
        line="alias calicoctl='kubectl exec -i -n kube-system calicoctl /calicoctl -- '"
        owner=sysadm
        regexp="^alias calicoctl='kubectl exec -i -n kube-system calicoctl /calicoctl -- '$"
        state=present
        insertafter=EOF
        create=True

    - name: Define a shell alias for calicoctl for root
      lineinfile:
        path=/root/.bashrc
        line="alias calicoctl='kubectl exec -i -n kube-system calicoctl /calicoctl -- '"
        owner=root
        regexp="^alias calicoctl='kubectl exec -i -n kube-system calicoctl /calicoctl -- '$"
        state=present
        insertafter=EOF
        create=True

#    - name: Waiting for Calico to come up
#      shell: kubectl exec -i -n kube-system calicoctl /calicoctl -- get felixconfiguration default --export -o yaml
#      register: calicoctl_output
#      until: calicoctl_output.stdout.find("FelixConfiguration") != -1
#      retries: 300
#      delay: 10

#    - name: Enabling application layer policy
#      shell: |
#        kubectl exec -i -n kube-system calicoctl /calicoctl -- get felixconfiguration default --export -o yaml | sed -e '/  policySyncPathPrefix:/d' \-e '$ a\  policySyncPathPrefix: /var/run/nodeagent' > felix-config.yaml
#        kubectl exec -i -n kube-system calicoctl /calicoctl -- apply -f - < felix-config.yaml
#      args:
#        executable: /bin/bash
#        chdir: $HOME

    # Install Istio

#    - name: Install Istio
#      shell: |
#        curl -L https://git.io/getLatestIstio | ISTIO_VERSION={{ platform.assets.istio.version }} sh -
#        cd $(ls -d istio-*)
#        kubectl apply -f install/kubernetes/helm/istio-init/files/
#        kubectl apply -f install/kubernetes/istio-demo-auth.yaml
#      args:
#        executable: /bin/bash
#        chdir: $HOME

#    - name: Updating the Istio sidecar injector
#      shell: "kubectl apply -f https://docs.projectcalico.org/v{{ platform.assets.calico.version }}/manifests/alp/istio-inject-configmap-{{ platform.assets.istio.version }}.yaml"

#    - name: Adding Calico authorization services to the mesh
#      shell: kubectl apply -f https://docs.projectcalico.org/v{{ platform.assets.calico.version }}/manifests/alp/istio-app-layer-policy.yaml

    # Install the Helm package manager along with the Tiller Companion inside the Kubernetes cluster

    - name: Download the Helm package manager
      get_url:
        url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        dest: /tmp/get-helm.sh
        mode: '0700'

    - name: Install Helm
      shell: /tmp/get-helm.sh

    - name: Install the Stable Helm repository
      shell: |
        helm repo add stable https://charts.helm.sh/stable
        helm repo update

    # Install the base components

    - name: Create the base namespace
      shell: kubectl create namespace ssp-base

    - name: Create the Docker Registry pull secret inside all custom namespaces
      shell: "kubectl create -n ssp-base secret generic admin-password --from-literal=admin-user=admin --from-literal=admin-password={{ platform.admin.password }}"
