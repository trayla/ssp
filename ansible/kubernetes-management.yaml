- hosts: kubemaster
  become: yes
  vars_files:
    - /opt/mgmt/values-ssp.yaml
  tasks:

    # Initialize the Kubernetes cluster

    - name: Initialize the cluster
      shell: kubeadm init --pod-network-cidr=192.168.0.0/16 >> cluster_initialized.txt
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: Determine the cluster connection configuration
      shell: cat /etc/kubernetes/admin.conf
      register: kubernetes_connection_config

    - name: Store the cluster connection configuration
      set_fact:
        kubernetes_connection_config: "{{ kubernetes_connection_config.stdout }}"

- hosts: console
  become: yes
  vars_files:
    - /opt/mgmt/values-ssp.yaml
  tasks:

    # Install Linux packages

    - name: Install necessary packages
      apt:
        name: apache2-utils,sshfs
        state: present
        update_cache: true

    # Make the management directory from the host available in the console machine

    - name: Create the management mount point
      file:
        path: /opt/mgmt
        state: directory
        mode: '0755'
        owner: sysadm
        group: sysadm

    - name: Create the SSH directory
      file:
        path: /root/.ssh
        state: directory

    - name: Create an SSH key pair
      openssh_keypair:
        path: /root/.ssh/id_rsa
        force: yes

    - name: Determine the public SSH key of the root user
      shell: cat /root/.ssh/id_rsa.pub
      register: sshkey_public_root

    - name: Store the public SSH key of the root user
      set_fact:
        sshkey_public_root: "{{ sshkey_public_root.stdout }}"

- hosts: all
  become: yes
  vars_files:
    - /opt/mgmt/values-ssp.yaml
  tasks:

    # Publish console SSH keys

    - name: Publish the public SSH key of the console machine to all other machines
      authorized_key:
        user: root
        state: present
        key: "{{ hostvars['console'].sshkey_public_root }}"

- hosts: console
  become: yes
  vars_files:
    - /opt/mgmt/values-ssp.yaml
  tasks:

    # Add the host key to the known SSH keys of the console

    - name: Add the host key to the known SSH keys of the console
      shell: "ssh-keyscan {{ platform.network.ipprefix }}.1"
      register: sshkeys_public_host

    - name: Update the known SSH keys
      known_hosts:
        name: "{{ platform.network.ipprefix }}.1"
        key: "{{ item }}"
      with_items: "{{ sshkeys_public_host.stdout_lines }}"

    # Mount the configuration directory from the host

    - name: Create a mount for the configuration directory from the host
      become_user: root
      mount:
        path: /opt/mgmt
        src: "sshfs#root@{{ platform.network.ipprefix }}.1:/opt/mgmt"
        fstype: fuse
        opts: delay_connect,idmap=user,uid=990,gid=990,umask=0,allow_other,_netdev,workaround=rename
        state: mounted

    # Install kubectl

    - name: Install GPG
      apt:
        name: gnupg
        state: present

    - name: Install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    - name: Add Kubernetes apt-key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'

    - name: Install kubectl
      apt:
        name: kubectl={{ platform.assets.kubernetes.version }}
        state: present
        force: yes

    # Enable the Kubernetes connection

    - name: Create the Kubernetes configuration directory
      file:
        path: /root/.kube
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Store the Kubernetes connection configuration
      copy:
        dest: /root/.kube/config
        content: "{{ hostvars['kubemaster'].kubernetes_connection_config }}"
        owner: root
        group: root

    - name: Create the Kubernetes configuration directory
      file:
        path: /home/sysadm/.kube
        state: directory
        mode: '0755'
        owner: sysadm
        group: sysadm

    - name: Store the Kubernetes connection configuration
      copy:
        dest: /home/sysadm/.kube/config
        content: "{{ hostvars['kubemaster'].kubernetes_connection_config }}"
        owner: sysadm
        group: sysadm

    # Enable autocompletion support for the Kubernetes command line tools

    - name: Configure Kubernetes shell autocompletion
      become: yes
      shell: kubectl completion bash > /etc/bash_completion.d/kubectl

    # Install Stern for enhanced log display

    - name: Install Stern
      shell: |
        wget https://github.com/wercker/stern/releases/download/{{ platform.assets.stern.version }}/stern_linux_amd64 -O /usr/bin/stern
        chmod a+x /usr/bin/stern
